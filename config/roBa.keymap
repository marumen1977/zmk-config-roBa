#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R                 &kp T                                                        &kp Y      &kp U  &kp I     &kp O     &kp P
&kp A      &kp S         &kp D         &kp F                 &kp G        &kp LS(LG(S))                   &kp MINUS       &kp H      &kp J  &kp K     &kp L     &kp RETURN
&kp Z      &kp X         &kp C         &kp V                 &kp B        &kp COLON                       &kp SEMICOLON   &kp N      &kp M  &mkp MB1  &mkp MB2  &kp RIGHT_SHIFT
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &lt_to_layer_0 3 TAB  &lt 2 LANG2  &lt_to_layer_0 1 BACKSPACE      &kp LANGUAGE_1  &kp SPACE                             &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        Number_Function {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                      &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &trans        &trans  &trans  &trans  &trans
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5  &trans      &trans  &kp F6        &kp F7  &kp F8  &kp F9  &kp F10
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp PERCENT                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &mt EQUAL MINUS     &mt TILDE CARET  &mt PIPE BACKSLASH
&trans           &trans             &trans    &trans      &kp AMPERSAND  &trans      &kp SQT  &trans                &mt PLUS SEMICOLON       &mt ASTERISK COLON  &kp AT_SIGN      &kp LEFT_BRACKET
&trans           &trans             &trans    &trans      &trans         &trans      &trans   &mt LESS_THAN COMMA   &mt GREATER_THAN PERIOD  &mt QUESTION SLASH  &kp UNDERSCORE   &kp RIGHT_BRACKET
&trans           &trans             &trans    &trans      &trans         &trans      &trans   &trans                                                                              &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &kp LC(UP)  &kp LC(DOWN)  &kp LC(LEFT)  &kp LC(RIGHT)
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans      &trans        &trans        &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans      &mkp MB3      &trans        &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };
    };
};
